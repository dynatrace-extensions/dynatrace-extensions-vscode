name: Marketplace release

on: workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        include:
        - os: windows-latest
          platform: win32
          arch: x64
          npm_config_arch: x64
        - os: ubuntu-latest
          platform: linux
          arch: x64
          npm_config_arch: x64
        - os: ubuntu-latest
          platform: linux
          arch: arm64
          npm_config_arch: arm64
        - os: ubuntu-latest
          platform: linux
          arch: armhf
          npm_config_arch: arm
        - os: ubuntu-latest
          platform: alpine
          arch: x64
          npm_config_arch: x64
        - os: ubuntu-latest
          platform: alpine
          arch: arm64
          npm_config_arch: arm64
        - os: macos-latest
          platform: darwin
          arch: x64
          npm_config_arch: x64
        - os: macos-latest
          platform: darwin
          arch: arm64
          npm_config_arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install extension
        run: npm run install:all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ matrix.npm_config_arch }}
      - name: Build everything
        run: npm run build:all
      - shell: pwsh
        run: echo "target=${{ matrix.platform }}-${{ matrix.arch }}" >> $env:GITHUB_ENV
      - name: Package
        run: npx vsce package --target ${{ env.target }}
      - uses: actions/upload-artifact@v4
        with:
            name: ${{ env.target }}
            path: "*.vsix"

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to VSCode Marketplace
        run: npx vsce publish --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
      - name: Publish to OpenVSX
        run: npx ovsx publish --packagePath $(find . -iname *.vsix)
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
