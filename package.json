{
	"name": "dt-ext-copilot",
	"displayName": "Dynatrace Extensions Copilot",
	"description": "Support for Dynatrace Extension 2.0 development",
	"author": {
		"name": "Dynatrace Platform Extension",
		"email": "extensions@dynatrace.com",
		"url": "https://info.dynatrace.com/global_all_wp_dynatrace_services_platform_extensions_fact_sheet_13656_fulfillment.html"
	},
	"version": "0.24.3",
	"repository": {
		"type": "git",
		"url": "https://github.com/dynatrace-extensions/dynatrace-extensions-copilot.git"
	},
	"engines": {
		"vscode": "^1.67.0"
	},
	"categories": [
		"Other",
		"Linters",
		"Snippets"
	],
	"extensionDependencies": [
		"redhat.vscode-yaml"
	],
	"extensionPack": [
		"redhat.vscode-yaml"
	],
	"icon": "out/assets/logos/dynatrace_logo.png",
	"galleryBanner": {
		"color": "#1e3142",
		"theme": "light"
	},
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "dt-ext-copilot.loadSchemas",
				"title": "Load schemas",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.initWorkspace",
				"title": "Initialize workspace",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.generateCertificates",
				"title": "Generate certificates",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.distributeCertificate",
				"title": "Distribute certificate",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.createDocumentation",
				"title": "Create documentation",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.buildExtension",
				"title": "Build extension",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.uploadExtension",
				"title": "Upload extension to tenant",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.activateExtension",
				"title": "Activate extension on tenant",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.createDashboard",
				"title": "Create overview dashboard",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot.createAlert",
				"title": "Create alert",
				"category": "Dynatrace"
			},
			{
				"command": "dt-ext-copilot-workspaces.refresh",
				"title": "Refresh",
				"icon": "$(refresh)"
			},
			{
				"command": "dt-ext-copilot-workspaces.addWorkspace",
				"title": "Add & initialize a workspace",
				"icon": "$(plus)"
			},
			{
				"command": "dt-ext-copilot-workspaces.deleteWorkspace",
				"title": "Remove workspace",
				"icon": "$(trash)"
			},
			{
				"command": "dt-ext-copilot-workspaces.openWorkspace",
				"title": "Open workspace",
				"icon": "$(folder-opened)"
			},
			{
				"command": "dt-ext-copilot-workspaces.editExtension",
				"title": "Open extension in editor",
				"icon": "$(notebook-open-as-text)"
			},
			{
				"command": "dt-ext-copilot-environments.refresh",
				"title": "Refresh",
				"icon": "$(refresh)"
			},
			{
				"command": "dt-ext-copilot-environments.addEnvironment",
				"title": "Add a tenant",
				"icon": "$(plus)"
			},
			{
				"command": "dt-ext-copilot-environments.useEnvironment",
				"title": "Use environment",
				"icon": "$(plug)"
			},
			{
				"command": "dt-ext-copilot-environments.editEnvironment",
				"title": "Edit environment",
				"icon": "$(pencil)"
			},
			{
				"command": "dt-ext-copilot-environments.deleteEnvironment",
				"title": "Remove environment",
				"icon": "$(trash)"
			}
		],
		"configuration": [
			{
				"title": "Behavior",
				"properties": {
					"dynatrace.metricSelectorsCodeLens": {
						"type": "boolean",
						"description": "Enable Code Lens functionality around metric selectors",
						"order": 1,
						"scope": "resource",
						"default": true
					},
					"dynatrace.entitySelectorsCodeLens": {
						"type": "boolean",
						"description": "Enable Code Lens functionality around entity selectors",
						"order": 2,
						"scope": "resource",
						"default": true
					},
					"dynatrace.fastDevelopmentMode": {
						"type": "boolean",
						"description": "When enabled, static extension assets are sent to Dynatrace on every Save, and when you build an extension it will automatically get uploaded and activated immediately.",
						"order": 3,
						"scope": "resource",
						"default": false
					}
				}
			},
			{
				"title": "Certificates",
				"properties": {
					"dynatrace.developerKeyLocation": {
						"type": "string",
						"description": "Bring your own: use the developer key file at this path instead of generating a new one.",
						"order": 3,
						"scope": "resource"
					},
					"dynatrace.developerCertificateLocation": {
						"type": "string",
						"description": "Bring your own: use the developer certificate file at this path instead of generating a new one.",
						"order": 4,
						"scope": "resource"
					},
					"dynatrace.rootOrCaCertificateLocation": {
						"type": "string",
						"description": "Bring your own: use the root (CA) certificate file at this path instead of generating a new one.",
						"order": 5,
						"scope": "resource"
					},
					"dynatrace.certificateCommonName": {
						"type": "string",
						"description": "Specifies the common name (CN) attribute of the certificate.",
						"order": 6,
						"scope": "resource",
						"default": "Extension Developer"
					},
					"dynatrace.certificateOrganization": {
						"type": "string",
						"description": "Specifies the organization (O) attribute of the certificate.",
						"order": 7,
						"scope": "resource"
					},
					"dynatrace.certificateOrganizationUnit": {
						"type": "string",
						"description": "Specifies the organization unit (OU) attribute of the certificate.",
						"order": 8,
						"scope": "resource"
					},
					"dynatrace.certificateStateOrProvince": {
						"type": "string",
						"description": "Specifies the state or province (ST) attribute of the certificate.",
						"order": 9,
						"scope": "resource"
					},
					"dynatrace.certificateCountryCode": {
						"type": "string",
						"description": "Specifies the country code (C) attribute of the certificate.",
						"order": 10,
						"scope": "resource"
					}
				}
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "dt-ext-copilot-workspaces.refresh",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-workspaces.addWorkspace",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-workspaces.openWorkspace",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-workspaces.deleteWorkspace",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-workspaces.editExtension",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-environments.refresh",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-environments.addEnvironment",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-environments.editEnvironment",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-environments.deleteEnvironment",
					"when": "false"
				},
				{
					"command": "dt-ext-copilot-environments.useEnvironment",
					"when": "false"
				}
			],
			"view/title": [
				{
					"command": "dt-ext-copilot-workspaces.addWorkspace",
					"when": "view == dt-ext-copilot-workspaces",
					"group": "navigation"
				},
				{
					"command": "dt-ext-copilot-workspaces.refresh",
					"when": "view == dt-ext-copilot-workspaces",
					"group": "navigation"
				},
				{
					"command": "dt-ext-copilot-environments.addEnvironment",
					"when": "view == dt-ext-copilot-environments",
					"group": "navigation"
				},
				{
					"command": "dt-ext-copilot-environments.refresh",
					"when": "view == dt-ext-copilot-environments",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "dt-ext-copilot-workspaces.openWorkspace",
					"when": "view == dt-ext-copilot-workspaces && viewItem == extensionWorkspace",
					"group": "inline@1"
				},
				{
					"command": "dt-ext-copilot-workspaces.deleteWorkspace",
					"when": "view == dt-ext-copilot-workspaces && viewItem == extensionWorkspace",
					"group": "inline@2"
				},
				{
					"command": "dt-ext-copilot-workspaces.editExtension",
					"when": "view == dt-ext-copilot-workspaces && viewItem == extension",
					"group": "inline"
				},
				{
					"command": "dt-ext-copilot-environments.useEnvironment",
					"when": "view == dt-ext-copilot-environments && viewItem == dynatraceEnvironment",
					"group": "inline@1"
				},
				{
					"command": "dt-ext-copilot-environments.editEnvironment",
					"when": "view == dt-ext-copilot-environments && viewItem == dynatraceEnvironment || viewItem == currentDynatraceEnvironment",
					"group": "inline@2"
				},
				{
					"command": "dt-ext-copilot-environments.deleteEnvironment",
					"when": "view == dt-ext-copilot-environments && viewItem == dynatraceEnvironment || viewItem == currentDynatraceEnvironment",
					"group": "inline@3"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "dynatrace-extensions",
					"title": "Dynatrace",
					"icon": "out/assets/icons/dynatrace_signet.png"
				}
			]
		},
		"views": {
			"dynatrace-extensions": [
				{
					"id": "dt-ext-copilot-workspaces",
					"name": "Extension 2.0 Workspaces"
				},
				{
					"id": "dt-ext-copilot-environments",
					"name": "Environments"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "dt-ext-copilot-workspaces",
				"contents": "Hello. You don't seem to have any extension workspaces initialized.\nStart by opening a folder and running the Initialize Workspace command.\n[Open folder](command:vscode.openFolder)",
				"when": "workbenchState == empty && dt-ext-copilot.numWorkspaces == 0"
			},
			{
				"view": "dt-ext-copilot-workspaces",
				"contents": "Hello. You don't seem to have any extension workspaces initialized.\nRun the Initialize Workspace command to initialize your current workspace.\n[Initialize workspace](command:dt-ext-copilot.initWorkspace)\nOr open a different workspace first.\n[Open folder](command:vscode.openFolder)",
				"when": "workbenchState != empty && dt-ext-copilot.numWorkspaces == 0 && !dt-ext-copilot.extensionWorkspace"
			},
			{
				"view": "dt-ext-copilot-workspaces",
				"contents": "Hello. You don't seem to have any extension workspaces initialized.\nYou seem to already be in an extensions workspace - want to initialize it now?\n[Initialize workspace](command:dt-ext-copilot.initWorkspace)\nOtherwise, open a different workspace first.\n[Open folder](command:vscode.openFolder)",
				"when": "workbenchState != empty && dt-ext-copilot.numWorkspaces == 0 && dt-ext-copilot.extensionWorkspace"
			},
			{
				"view": "dt-ext-copilot-environments",
				"contents": "Hello. You don't have any Dynatrace Environments saved.\nWould you like to add one now?\n[Add environment](command:dt-ext-copilot-environments.addEnvironment)",
				"when": "dt-ext-copilot.numEnvironments == 0"
			}
		],
		"icons": {
			"dt-signet": {
				"description": "Dynatrace signet",
				"default": {
					"fontPath": "out/assets/fonts/dt-custom-icons.woff",
					"fontCharacter": "A"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"build": "npm run pretest && npm run vscode:prepublish"
	},
	"devDependencies": {
		"@types/adm-zip": "^0.5.0",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/mock-fs": "^4.13.1",
		"@types/node": "^14.18.21",
		"@types/node-forge": "^1.0.2",
		"@types/vscode": "^1.67.0",
		"@typescript-eslint/eslint-plugin": "^5.21.0",
		"@typescript-eslint/parser": "^5.21.0",
		"@vscode/test-electron": "^2.1.3",
		"esbuild": "^0.15.7",
		"eslint": "^8.14.0",
		"mocha": "^9.2.2",
		"mock-fs": "^5.1.4",
		"typescript": "^4.6.4"
	},
	"dependencies": {
		"adm-zip": "^0.5.9",
		"axios": "^0.27.2",
		"form-data": "^4.0.0",
		"glob": "^8.0.3",
		"node-forge": "^1.3.1",
		"open": "^8.4.0",
		"yaml": "^2.1.1"
	}
}
